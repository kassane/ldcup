name: Artifacts
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: amd64
      fail-fast: false
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: dlang-community/setup-dlang@v2
        with:
          compiler: ldc-latest
      - name: Build
        run: |
          dub -b release
      - name: Tests
        run: |
          dub -b release -- install -v
          dub -b release -- install ldc2-master -v
          dub -b release -- list -v
          dub -b release -- uninstall ldc2-1.40.0 -v
          dub -b release -- list -v
          dub -b release -- run -v -- --version
      - uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: ldcup-${{ matrix.os }}-${{ matrix.arch }}
          path: bin

  freebsd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run FreeBSD VM
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y dub ldc
          run: |
            dub -b release
            dub -b release -- install -v
            dub -b release -- install ldc2-master -v
            dub -b release -- list -v
            dub -b release -- uninstall ldc2-1.40.0 -v
            dub -b release -- list -v
            dub -b release -- run -v -- --version
      - uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: ldcup-freebsd-14.2-amd64
          path: bin

  alpine:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    defaults:
      run:
        shell: sh
    steps:
      - uses: actions/checkout@v4
      
      - name: Prepare
        run: |
            apk update
            apk add --no-cache ldc dub clang
      - name: Build
        run: |
            dub -b release
      # - name: Tests
      #   run: |
      #       dub -b release -- install ldc2-nightly -v
      #       dub -b release -- list -v
      
      - uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: ldcup-alpine-amd64
          path: bin
